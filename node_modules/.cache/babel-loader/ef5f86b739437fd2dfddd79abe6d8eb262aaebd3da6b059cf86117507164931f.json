{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\my-react-app\\\\src\\\\Screens\\\\productInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDoc, query, collection, where, getDocs, doc } from 'firebase/firestore'; // Assuming Firebase v9\nimport { db } from '../firebase.js';\nimport { Table, Image, Col, label, input } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductInfo() {\n  _s();\n  const {\n    data: productId\n  } = useParams(); // Extract product ID from route parameter\n  const [productInfo, setProductInfo] = useState(null);\n  const [productName, setProductName] = useState(null);\n  // State for product data\n  console.log(productId);\n\n  // Fetch product data from Firebase on component mount and whenever productId changes\n  useEffect(() => {\n    const getProductInfo = async () => {\n      if (!productId) return; // Handle missing product ID gracefully\n\n      try {\n        const docRef = doc(db, \"Products\", productId);\n        const docSnap = await getDoc(docRef);\n        if (docSnap != null) {\n          setProductInfo({\n            id: docSnap.id,\n            ...docSnap.data()\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching product info:', error); // Handle errors\n      }\n    };\n    getProductInfo();\n  }, []); // Dependency array ensures effect runs on product ID change\n\n  // Display product info or loading/error message\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 fifty-percent-width\",\n    children: productInfo != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating mb-3 col-6 p-2 \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        class: \"form-control\",\n        id: \"Name\",\n        value: productInfo.name,\n        placeholder: \"Product Name\",\n        onChange: () => {\n          setProductInfo(prevProductInfo => ({\n            ...productInfo,\n            name: this\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"Name\",\n        children: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"Category\",\n        value: productInfo.category,\n        placeholder: \"Product Name\",\n        onChange: () => {\n          setProductInfo(prevProductInfo => ({\n            ...productInfo,\n            category: this\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"Category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this) : productInfo === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading product info...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Product not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductInfo, \"RseDXw3ZeGvspidq+/z4re96TmQ=\", false, function () {\n  return [useParams];\n});\n_c = ProductInfo;\nvar _c;\n$RefreshReg$(_c, \"ProductInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDoc","query","collection","where","getDocs","doc","db","Table","Image","Col","label","input","jsxDEV","_jsxDEV","ProductInfo","_s","data","productId","productInfo","setProductInfo","productName","setProductName","console","log","getProductInfo","docRef","docSnap","id","error","className","children","type","class","value","name","placeholder","onChange","prevProductInfo","fileName","_jsxFileName","lineNumber","columnNumber","for","category","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/my-react-app/src/Screens/productInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDoc , query,collection, where, getDocs ,doc } from 'firebase/firestore'; // Assuming Firebase v9\r\nimport { db } from '../firebase.js';\r\nimport { Table ,Image,Col , label , input} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default  function ProductInfo() {\r\n  const { data: productId } = useParams(); // Extract product ID from route parameter\r\n  const [productInfo, setProductInfo] = useState(null);\r\n  const [productName , setProductName] =useState(null)\r\n   // State for product data\r\n  console.log(productId)\r\n\r\n\r\n  // Fetch product data from Firebase on component mount and whenever productId changes\r\n  useEffect(() => {\r\n    const getProductInfo = async () => {\r\n      if (!productId) return; // Handle missing product ID gracefully\r\n\r\n      try {\r\n        const docRef = doc(db, \"Products\", productId);\r\n          const docSnap = await getDoc(docRef);\r\n\r\n       if(docSnap!=null){\r\n        setProductInfo({id:docSnap.id , ...docSnap.data()});   \r\n         \r\n       \r\n    \r\n    }\r\n       \r\n        \r\n      \r\n      } catch (error) {\r\n        console.error('Error fetching product info:', error); // Handle errors\r\n      }\r\n    };\r\n    \r\n    getProductInfo();\r\n    \r\n  \r\n  }, []); // Dependency array ensures effect runs on product ID change\r\n\r\n  // Display product info or loading/error message\r\n  return (\r\n    \r\n    <div className={\"p-4 fifty-percent-width\"}>\r\n      {productInfo!=null ? (\r\n     <div className=\"form-floating mb-3 col-6 p-2 \">\r\n     <input type=\"email\" class=\"form-control\" id=\"Name\" value ={productInfo.name} placeholder=\"Product Name\" onChange={()=>{setProductInfo((prevProductInfo)=>({\r\n       ...productInfo , name:this\r\n     }))}} / >\r\n     <label for=\"Name\">Product Name</label>\r\n\r\n     <input type=\"text\" class=\"form-control\" id=\"Category\" value ={productInfo.category} placeholder=\"Product Name\" onChange={()=>{setProductInfo((prevProductInfo)=>({\r\n       ...productInfo , category:this\r\n     }))}} / >\r\n     <label for=\"Category\">Category</label>\r\n\r\n\r\n   </div>\r\n\r\n      ) : (\r\n        productInfo === null ? (\r\n          <p>Loading product info...</p>\r\n        ) : (\r\n          <p>Product not found.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}