{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\my-react-app\\\\src\\\\Screens\\\\productInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDoc, doc } from 'firebase/firestore'; // Assuming Firebase v9\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductInfo() {\n  _s();\n  const {\n    data: productId\n  } = useParams(); // Extract product ID from route parameter\n  const [productInfo, setProductInfo] = useState(null); // State for product data\n\n  // Fetch product data from Firebase on component mount and whenever productId changes\n  useEffect(() => {\n    const getProductInfo = async () => {\n      if (!productId) return; // Handle missing product ID gracefully\n\n      try {\n        const q = query(collection(db, \"Products\"), where(\"productId\", \"==\", data));\n        const snapshot = await getDocs(q);\n        const retrievedProduct = [];\n        snapshot.forEach(doc => {\n          retrievedProduct.push({\n            id: doc.id,\n            ...doc.data()\n          }); // Add product data with ID\n        });\n        setProducts(retrievedProduct);\n      } catch (error) {\n        console.error('Error fetching product info:', error); // Handle errors\n      }\n    };\n    getProductInfo();\n  }, [productId]); // Dependency array ensures effect runs on product ID change\n\n  // Display product info or loading/error message\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: productInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Product Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", productInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : productInfo === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading product info...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Product not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductInfo, \"3GlpWhRD/S3rGW76ETaYuPKLWg8=\", false, function () {\n  return [useParams];\n});\n_c = ProductInfo;\nvar _c;\n$RefreshReg$(_c, \"ProductInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDoc","doc","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductInfo","_s","data","productId","productInfo","setProductInfo","getProductInfo","q","query","collection","db","where","snapshot","getDocs","retrievedProduct","forEach","push","id","setProducts","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/my-react-app/src/Screens/productInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDoc, doc } from 'firebase/firestore'; // Assuming Firebase v9\r\n\r\nexport default function ProductInfo() {\r\n  const { data: productId } = useParams(); // Extract product ID from route parameter\r\n  const [productInfo, setProductInfo] = useState(null); // State for product data\r\n\r\n  // Fetch product data from Firebase on component mount and whenever productId changes\r\n  useEffect(() => {\r\n    const getProductInfo = async () => {\r\n      if (!productId) return; // Handle missing product ID gracefully\r\n\r\n      try {\r\n        const q = query(collection(db, \"Products\"), where(\"productId\", \"==\", data));\r\n        const snapshot = await getDocs(q);\r\n\r\n        \r\n\r\n        const retrievedProduct = [];\r\n        snapshot.forEach((doc) => {\r\n          retrievedProduct.push({id: doc.id, ...doc.data() }); // Add product data with ID\r\n        });\r\n        setProducts(retrievedProduct);\r\n      \r\n      } catch (error) {\r\n        console.error('Error fetching product info:', error); // Handle errors\r\n      }\r\n    };\r\n\r\n    getProductInfo();\r\n  }, [productId]); // Dependency array ensures effect runs on product ID change\r\n\r\n  // Display product info or loading/error message\r\n  return (\r\n    <div>\r\n      {productInfo ? (\r\n        <>\r\n          <h2>Product Information</h2>\r\n          <p>Name: {productInfo.name}</p>\r\n          {/* Access other product properties from productInfo */}\r\n        </>\r\n      ) : (\r\n        productInfo === null ? (\r\n          <p>Loading product info...</p>\r\n        ) : (\r\n          <p>Product not found.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,EAAEC,GAAG,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IAAEC,IAAI,EAAEC;EAAU,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;EACzC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI,CAACH,SAAS,EAAE,OAAO,CAAC;;MAExB,IAAI;QACF,MAAMI,CAAC,GAAGC,KAAK,CAACC,UAAU,CAACC,EAAE,EAAE,UAAU,CAAC,EAAEC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAET,IAAI,CAAC,CAAC;QAC3E,MAAMU,QAAQ,GAAG,MAAMC,OAAO,CAACN,CAAC,CAAC;QAIjC,MAAMO,gBAAgB,GAAG,EAAE;QAC3BF,QAAQ,CAACG,OAAO,CAAEpB,GAAG,IAAK;UACxBmB,gBAAgB,CAACE,IAAI,CAAC;YAACC,EAAE,EAAEtB,GAAG,CAACsB,EAAE;YAAE,GAAGtB,GAAG,CAACO,IAAI,CAAC;UAAE,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC;QACFgB,WAAW,CAACJ,gBAAgB,CAAC;MAE/B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC,CAAC;MACxD;IACF,CAAC;IAEDb,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB;EACA,oBACEN,OAAA;IAAAwB,QAAA,EACGjB,WAAW,gBACVP,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B5B,OAAA;QAAAwB,QAAA,GAAG,QAAM,EAACjB,WAAW,CAACsB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAE/B,CAAC,GAEHrB,WAAW,KAAK,IAAI,gBAClBP,OAAA;MAAAwB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE9B5B,OAAA;MAAAwB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAE3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CA/CuBD,WAAW;EAAA,QACLP,SAAS;AAAA;AAAAkC,EAAA,GADf3B,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}