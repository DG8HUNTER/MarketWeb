{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\my-react-app\\\\src\\\\Screens\\\\productInfo.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDoc, query, collection, where, getDocs, doc, updateDoc } from 'firebase/firestore'; // Assuming Firebase v9\nimport { db } from '../firebase.js';\nimport { Table, Image, Col, label, input, textarea } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getDownloadURL, ref, uploadBytes, getStorage, uploadBytesResumable } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductInfo() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    data: productId\n  } = useParams(); // Extract product ID from route parameter\n  const [productInfo, setProductInfo] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  console.log(productInfo);\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const droppedFile = event.dataTransfer.files[0];\n    if (!droppedFile.type.match('image/.*')) {\n      alert('Please select an image file.');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => {\n      setSelectedImage(e.target.result);\n    };\n    reader.readAsDataURL(droppedFile);\n  };\n  const handleFileChange = event => {\n    _s();\n    const droppedFile = event.target.files[0];\n    if (!droppedFile.type.match('image/.*')) {\n      alert('Please select an image file.');\n      return;\n    }\n    const handleUpdate = async () => {\n      const storage = getStorage(); // Initialize Storage instance (once outside the function)\n\n      try {\n        // Create a unique filename (optional)\n        const filename = `\\{productId}_${productInfo.name}.png`;\n\n        // Create a storage reference\n        const storageRef = ref(storage, `product_images/${filename}`);\n\n        // Handle file conversion if needed (if using DataURL from handleDrop)\n        const imageBlob = selectedImage instanceof Blob ? selectedImage : await fetch(selectedImage).then(r => r.blob());\n\n        // Upload the image Blob to Firebase Storage\n        const uploadTask = uploadBytesResumable(storageRef, imageBlob, {\n          contentType: 'image/jpeg' // Specify image type\n        });\n\n        // Monitor upload progress (optional)\n        uploadTask.on('state_changed', snapshot => {\n          const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          console.log('Upload progress:', progress + '%');\n        }, error => {\n          console.error('Error uploading image:', error);\n        }, async () => {\n          const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n          console.log('Image URL:', downloadURL);\n\n          // Update the product document with the new image URL\n          const productDocRef = doc(db, \"Products\", productId);\n          await updateDoc(productDocRef, {\n            // Update relevant product fields\n            \"discount\": parseInt(productInfo.discount),\n            \"image\": downloadURL,\n            \"name\": productInfo.name,\n            \"inventory\": parseInt(productInfo.inventory),\n            \"description\": productInfo.description,\n            \"category\": productInfo.category\n            // ...other product fields\n          });\n          console.log('Product updated successfully!');\n        });\n      } catch (error) {\n        console.error('Error updating product:', error);\n        // Display a user-friendly error message here if needed\n      } finally {\n        // Reset upload state (optional)\n        setSelectedImage(null); // Clear selected image after upload\n      }\n    };\n\n    // Fetch product data from Firebase on component mount and whenever productId changes\n    useEffect(() => {\n      const getProductInfo = async () => {\n        if (!productId) return; // Handle missing product ID gracefully\n\n        try {\n          const docRef = doc(db, \"Products\", productId);\n          const docSnap = await getDoc(docRef);\n          if (docSnap != null) {\n            setProductInfo({\n              productId: docSnap.id,\n              ...docSnap.data()\n            });\n          }\n        } catch (error) {\n          console.error('Error fetching product info:', error); // Handle errors\n        }\n      };\n      getProductInfo();\n    }, []); // Dependency array ensures effect runs on product ID change\n\n    // Display product info or loading/error message\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 vh-100 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Product Info \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), productInfo != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \" col-12  d-md-flex justify-content-md-between  align-items-md-center  \",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"row g-3 col-md-6 px-2 py-4 shadow-lg  bg-body rounded h-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"productName\",\n              class: \"form-label \",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control \",\n              id: \"productName\",\n              value: productInfo.name,\n              placeholder: \"Product Name\",\n              onChange: event => setProductInfo({\n                ...productInfo,\n                name: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              class: \"form-label\",\n              children: \"Price $\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"input-group-text\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                class: \"form-control\",\n                id: \"price\",\n                min: 0,\n                value: productInfo.price,\n                placeholder: \"Price\",\n                onChange: event => setProductInfo({\n                  ...productInfo,\n                  price: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Discount\",\n              class: \"form-label\",\n              children: \"Discount %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: 0,\n              max: 100,\n              class: \"form-control\",\n              id: \"Discount\",\n              placeholder: \"Discount\",\n              value: productInfo.discount,\n              onChange: event => setProductInfo({\n                ...productInfo,\n                discount: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Category\",\n              class: \"form-label\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              id: \"Category\",\n              placeholder: \"Category\",\n              value: productInfo.category,\n              onChange: event => setProductInfo({\n                ...productInfo,\n                category: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-12 \",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Inventroy\",\n              class: \"form-label\",\n              children: \"Inventory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control  \",\n              id: \"Inventory\",\n              value: productInfo.inventory,\n              onChange: event => setProductInfo({\n                ...productInfo,\n                inventory: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-12 \",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Description\",\n              class: \"form-label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              rows: \"3\",\n              class: \"form-control  \",\n              id: \"Description\",\n              value: productInfo.description,\n              onChange: event => setProductInfo({\n                ...productInfo,\n                description: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-12 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-primary w-100\",\n              onClick: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-6 d-flex flex-column  align-items-center mt-4 mt-md-0\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            sm: 6,\n            md: 8,\n            lg: 7,\n            xl: 6,\n            class: \"align-self-center\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n              src: productInfo.image,\n              className: \"rounded\",\n              alt: \"Product Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-uploader mt-4 col-3\",\n            onDragOver: handleDragOver,\n            onDrop: handleDrop,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 1\n      }, this) : productInfo === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading product info...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Product not found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this);\n  };\n  _s(handleFileChange, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n_s2(ProductInfo, \"a/miSzFE/tE29tQfs1kuDSufnw8=\", false, function () {\n  return [useParams];\n});\n_c = ProductInfo;\nvar _c;\n$RefreshReg$(_c, \"ProductInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDoc","query","collection","where","getDocs","doc","updateDoc","db","Table","Image","Col","label","input","textarea","getDownloadURL","ref","uploadBytes","getStorage","uploadBytesResumable","jsxDEV","_jsxDEV","ProductInfo","_s2","_s","$RefreshSig$","data","productId","productInfo","setProductInfo","selectedImage","setSelectedImage","console","log","handleDragOver","event","preventDefault","handleDrop","droppedFile","dataTransfer","files","type","match","alert","reader","FileReader","onload","e","target","result","readAsDataURL","handleFileChange","handleUpdate","storage","filename","name","storageRef","imageBlob","Blob","fetch","then","r","blob","uploadTask","contentType","on","snapshot","progress","bytesTransferred","totalBytes","error","downloadURL","productDocRef","parseInt","discount","inventory","description","category","getProductInfo","docRef","docSnap","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","htmlFor","value","placeholder","onChange","min","price","max","rows","onClick","xs","sm","md","lg","xl","src","image","alt","onDragOver","onDrop","accept","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/my-react-app/src/Screens/productInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDoc , query,collection, where, getDocs ,doc ,updateDoc} from 'firebase/firestore'; // Assuming Firebase v9\r\nimport { db  } from '../firebase.js';\r\nimport { Table ,Image,Col , label , input , textarea} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { getDownloadURL, ref, uploadBytes ,getStorage  , uploadBytesResumable} from 'firebase/storage';\r\n\r\nexport default  function ProductInfo() {\r\n  const { data: productId } = useParams(); // Extract product ID from route parameter\r\n  const [productInfo, setProductInfo] = useState(null);\r\n   const [selectedImage, setSelectedImage] = useState(null);\r\n   console.log(productInfo)\r\n\r\n   const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const droppedFile = event.dataTransfer.files[0];\r\n\r\n    if (!droppedFile.type.match('image/.*')) {\r\n      alert('Please select an image file.');\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setSelectedImage(e.target.result);\r\n    };\r\n    reader.readAsDataURL(droppedFile);\r\n  };\r\n\r\n\r\n  const handleFileChange = (event) => {\r\n    const droppedFile = event.target.files[0];\r\n\r\n    if (!droppedFile.type.match('image/.*')) {\r\n      alert('Please select an image file.');\r\n      return;\r\n    }\r\n  const handleUpdate = async () => {\r\n  \r\n\r\n    const storage = getStorage(); // Initialize Storage instance (once outside the function)\r\n\r\n    try {\r\n      // Create a unique filename (optional)\r\n      const filename = `\\{productId}_${productInfo.name}.png`;\r\n\r\n      // Create a storage reference\r\n      const storageRef = ref(storage, `product_images/${filename}`);\r\n\r\n      // Handle file conversion if needed (if using DataURL from handleDrop)\r\n      const imageBlob = selectedImage instanceof Blob ? selectedImage : await fetch(selectedImage).then(r => r.blob());\r\n\r\n      // Upload the image Blob to Firebase Storage\r\n      const uploadTask = uploadBytesResumable(storageRef, imageBlob, {\r\n        contentType: 'image/jpeg' // Specify image type\r\n      });\r\n\r\n      // Monitor upload progress (optional)\r\n      uploadTask.on('state_changed',\r\n        (snapshot) => {\r\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload progress:', progress + '%');\r\n        },\r\n        (error) => {\r\n          console.error('Error uploading image:', error);\r\n        },\r\n        async () => {\r\n          const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\r\n          console.log('Image URL:', downloadURL);\r\n          \r\n\r\n          // Update the product document with the new image URL\r\n          const productDocRef = doc(db, \"Products\", productId);\r\n          await updateDoc(productDocRef, {\r\n            // Update relevant product fields\r\n            \"discount\": parseInt(productInfo.discount),\r\n            \"image\": downloadURL,\r\n            \"name\": productInfo.name,\r\n            \"inventory\": parseInt(productInfo.inventory),\r\n            \"description\": productInfo.description,\r\n            \"category\": productInfo.category,\r\n            // ...other product fields\r\n          });\r\n\r\n          console.log('Product updated successfully!');\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      // Display a user-friendly error message here if needed\r\n    } finally {\r\n      // Reset upload state (optional)\r\n      setSelectedImage(null); // Clear selected image after upload\r\n    }\r\n  }\r\n\r\n\r\n  // Fetch product data from Firebase on component mount and whenever productId changes\r\n  useEffect(() => {\r\n    const getProductInfo = async () => {\r\n      if (!productId) return; // Handle missing product ID gracefully\r\n\r\n      try {\r\n        const docRef = doc(db, \"Products\", productId);\r\n          const docSnap = await getDoc(docRef);\r\n\r\n       if(docSnap!=null){\r\n        setProductInfo({productId:docSnap.id , ...docSnap.data()});   \r\n         \r\n       \r\n    \r\n    }\r\n       \r\n        \r\n      \r\n      } catch (error) {\r\n        console.error('Error fetching product info:', error); // Handle errors\r\n      }\r\n    };\r\n    \r\n    getProductInfo();\r\n    \r\n  \r\n  }, []); // Dependency array ensures effect runs on product ID change\r\n\r\n  // Display product info or loading/error message\r\n  return (\r\n    \r\n    <div className={\"p-4 vh-100 \"}>\r\n        <h2 className={\"mb-4\"}>Product Info </h2>\r\n      {productInfo!=null ? (\r\n<div class=\" col-12  d-md-flex justify-content-md-between  align-items-md-center  \">\r\n<form class=\"row g-3 col-md-6 px-2 py-4 shadow-lg  bg-body rounded h-auto\">\r\n  <div class=\"col-md-6\">\r\n    <label htmlFor=\"productName\" class=\"form-label \">Name</label>\r\n    <input type=\"text\" class=\"form-control \" id=\"productName\" value={productInfo.name} placeholder='Product Name' onChange={(event) => setProductInfo({ ...productInfo, name: event.target.value })}/>\r\n  </div>\r\n\r\n\r\n  <div class=\"col-md-6\">\r\n    <label htmlFor=\"price\" class=\"form-label\">Price $</label>\r\n  <div class=\"input-group mb-3\">\r\n  <span class=\"input-group-text\">$</span>\r\n  <input type=\"number\" class=\"form-control\" id=\"price\"  min={0} value={productInfo.price} placeholder=\"Price\"  onChange={(event) => setProductInfo({ ...productInfo, price: event.target.value })} />\r\n</div>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <label htmlFor=\"Discount\" class=\"form-label\">Discount %</label>\r\n    <input type=\"number\" min={0} max={100} class=\"form-control\" id=\"Discount\" placeholder=\"Discount\" value={productInfo.discount}  onChange={(event) => setProductInfo({ ...productInfo, discount: event.target.value })} / >\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <label htmlFor=\"Category\" class=\"form-label\">Category</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"Category\" placeholder=\"Category\" value={productInfo.category}  onChange={(event) => setProductInfo({ ...productInfo, category: event.target.value })} />\r\n  </div>\r\n  <div class=\"col-md-12 \">\r\n    <label htmlFor=\"Inventroy\" class=\"form-label\">Inventory</label>\r\n    <input type=\"text\"   class=\"form-control  \" id=\"Inventory\" value={productInfo.inventory}  onChange={(event) => setProductInfo({ ...productInfo, inventory: event.target.value })} />\r\n  </div>\r\n  <div class=\"col-md-12 \">\r\n    <label htmlFor=\"Description\" class=\"form-label\">Description</label>\r\n    <textarea type=\"text\" rows=\"3\"  class=\"form-control  \" id=\"Description\" value={productInfo.description}  onChange={(event) => setProductInfo({ ...productInfo, description: event.target.value })} />\r\n  </div>\r\n  \r\n  <div class=\"col-12 mt-5\">\r\n    <button type=\"button\" class=\"btn btn-primary w-100\" onClick={handleUpdate}>Update</button>\r\n  </div>\r\n</form>\r\n\r\n<div class={\"col-md-6 d-flex flex-column  align-items-center mt-4 mt-md-0\"}>\r\n<Col xs={6} sm={6} md={8} lg={7} xl={6} class={\"align-self-center\"}> {/* Responsive breakpoints */}\r\n      <Image src={productInfo.image} className=\"rounded\" alt=\"Product Image\" />\r\n\r\n     \r\n    </Col>\r\n\r\n    <div className=\"image-uploader mt-4 col-3\" onDragOver={handleDragOver} onDrop={handleDrop} >\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange}  />\r\n      \r\n    </div>\r\n\r\n  \r\n\r\n</div>\r\n\r\n</div>       \r\n\r\n\r\n\r\n\r\n      ) : (\r\n        productInfo === null ? (\r\n          <p>Loading product info...</p>\r\n        ) : (\r\n          <p>Product not found.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}