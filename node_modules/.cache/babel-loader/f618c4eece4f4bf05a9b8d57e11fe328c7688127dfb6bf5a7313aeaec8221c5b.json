{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\my-react-app\\\\src\\\\products.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Import React for component structure\nimport { db } from './firebase.js';\n// Import the Firestore instance from firebase.js\nimport { getDocs, collection, query, where } from \"firebase/firestore\";\nimport { useParams } from 'react-router-dom';\nimport { Button } from \"./Components/button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const {\n    data\n  } = useParams();\n  const [products, setProducts] = useState([]); // State to store retrieved products\n\n  // Fetch products from Firestore on component mount\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const q = query(collection(db, \"Products\"), where(\"storeId\", \"==\", data));\n        const snapshot = await getDocs(q);\n        const retrievedProducts = [];\n        snapshot.forEach(doc => {\n          retrievedProducts.push({\n            id: doc.id,\n            ...doc.data()\n          }); // Add product data with ID\n        });\n        setProducts(retrievedProducts);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    getProducts();\n  }, []); // Empty dependency array ensures fetching only once on mount\n\n  // Display retrieved products (replace with your preferred UI component)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Products, \"w4MBQWOXK/PjlSZI2xziKFM07MU=\", false, function () {\n  return [useParams];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","db","getDocs","collection","query","where","useParams","Button","jsxDEV","_jsxDEV","Products","_s","data","products","setProducts","getProducts","q","snapshot","retrievedProducts","forEach","doc","push","id","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","product","name","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/my-react-app/src/products.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react'; // Import React for component structure\r\nimport { db } from './firebase.js';\r\n // Import the Firestore instance from firebase.js\r\nimport {getDocs,collection , query,where} from \"firebase/firestore\"\r\nimport { useParams } from 'react-router-dom';\r\nimport {Button} from \"./Components/button.js\"\r\n\r\n\r\nfunction Products(){\r\n    const { data } = useParams();\r\n  const [products, setProducts] = useState([]); // State to store retrieved products\r\n\r\n  // Fetch products from Firestore on component mount\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const q = query(collection(db, \"Products\"), where(\"storeId\", \"==\", data));\r\n\r\n        const snapshot = await getDocs(q);\r\n\r\n        const retrievedProducts = [];\r\n        snapshot.forEach((doc) => {\r\n          retrievedProducts.push({id: doc.id, ...doc.data() }); // Add product data with ID\r\n        });\r\n        setProducts(retrievedProducts);\r\n      \r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n\r\n    getProducts();\r\n  }, []); // Empty dependency array ensures fetching only once on mount\r\n\r\n  // Display retrieved products (replace with your preferred UI component)\r\n  return (\r\n    <div>\r\n\r\n      <Button>Hello</Button>\r\n   \r\n      <h1>Products</h1>\r\n      {products.length > 0 ? (\r\n        <ul>\r\n          {products.map((product) => (\r\n            <li key={product.id}>\r\n              {/* Replace with your product display logic using product.name, price, etc. */}\r\n           {product.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No products found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,SAASC,EAAE,QAAQ,eAAe;AACjC;AACD,SAAQC,OAAO,EAACC,UAAU,EAAGC,KAAK,EAACC,KAAK,QAAO,oBAAoB;AACnE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,MAAM,QAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAK,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,CAAC,GAAGZ,KAAK,CAACD,UAAU,CAACF,EAAE,EAAE,UAAU,CAAC,EAAEI,KAAK,CAAC,SAAS,EAAE,IAAI,EAAEO,IAAI,CAAC,CAAC;QAEzE,MAAMK,QAAQ,GAAG,MAAMf,OAAO,CAACc,CAAC,CAAC;QAEjC,MAAME,iBAAiB,GAAG,EAAE;QAC5BD,QAAQ,CAACE,OAAO,CAAEC,GAAG,IAAK;UACxBF,iBAAiB,CAACG,IAAI,CAAC;YAACC,EAAE,EAAEF,GAAG,CAACE,EAAE;YAAE,GAAGF,GAAG,CAACR,IAAI,CAAC;UAAE,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC;QACFE,WAAW,CAACI,iBAAiB,CAAC;MAEhC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACEN,OAAA;IAAAgB,QAAA,gBAEEhB,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtBpB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBhB,QAAQ,CAACiB,MAAM,GAAG,CAAC,gBAClBrB,OAAA;MAAAgB,QAAA,EACGZ,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBACpBvB,OAAA;QAAAgB,QAAA,EAEAO,OAAO,CAACC;MAAI,GAFHD,OAAO,CAACV,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELpB,OAAA;MAAAgB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA/CQD,QAAQ;EAAA,QACIJ,SAAS;AAAA;AAAA4B,EAAA,GADrBxB,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}