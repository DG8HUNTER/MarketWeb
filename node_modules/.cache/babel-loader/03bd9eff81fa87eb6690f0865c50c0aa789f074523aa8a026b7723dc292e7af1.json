{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { db } from './firebase'; // Assuming 'firebase.ts' is in the same directory as 'App.js' and named 'firebase.ts'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsSnapshot = await db.collection('Products').get();\n        const productsData = productsSnapshot.docs.map(doc => doc.data());\n        setProducts(productsData);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.price]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["db","jsxDEV","_jsxDEV","App","_s","products","setProducts","useState","useEffect","fetchProducts","productsSnapshot","collection","get","productsData","docs","map","doc","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","product","name","price","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/my-react-app/src/App.js"],"sourcesContent":["\nimport { db } from './firebase'; // Assuming 'firebase.ts' is in the same directory as 'App.js' and named 'firebase.ts'\n\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsSnapshot = await db.collection('Products').get();\n        const productsData = productsSnapshot.docs.map(doc => doc.data());\n        setProducts(productsData);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  return (\n    <div>\n      <h1>Product List</h1>\n      <ul>\n        {products.map(product => (\n          <li key={product.id}>\n            {product.name} - {product.price}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AACA,SAASA,EAAE,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAMV,EAAE,CAACW,UAAU,CAAC,UAAU,CAAC,CAACC,GAAG,CAAC,CAAC;QAC9D,MAAMC,YAAY,GAAGH,gBAAgB,CAACI,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;QACjEX,WAAW,CAACO,YAAY,CAAC;MAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDT,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAAkB,QAAA,EACGf,QAAQ,CAACU,GAAG,CAACU,OAAO,iBACnBvB,OAAA;QAAAkB,QAAA,GACGK,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,KAAK;MAAA,GADxBF,OAAO,CAACG,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7BID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}