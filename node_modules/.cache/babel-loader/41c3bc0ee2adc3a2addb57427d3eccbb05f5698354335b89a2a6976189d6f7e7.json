{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\my-react-app\\\\src\\\\Screens\\\\productInfo.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDoc, query, collection, where, getDocs, doc } from 'firebase/firestore'; // Assuming Firebase v9\nimport { db } from '../firebase.js';\nimport { Table, Image, Col, label, input } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductInfo() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    data: productId\n  } = useParams(); // Extract product ID from route parameter\n  const [productInfo, setProductInfo] = useState(null); // State for product data\n  console.log(productId);\n\n  // Fetch product data from Firebase on component mount and whenever productId changes\n  _s(useEffect(_s(() => {\n    _s();\n    const getProductInfo = async () => {\n      if (!productId) return; // Handle missing product ID gracefully\n\n      try {\n        const docRef = doc(db, \"Products\", productId);\n        const docSnap = await getDoc(docRef);\n        if (docSnap != null) {\n          setProductInfo({\n            id: docSnap.id,\n            ...docSnap.data()\n          });\n          setProductName(productInfo.id);\n        }\n      } catch (error) {\n        console.error('Error fetching product info:', error); // Handle errors\n      }\n    };\n    getProductInfo();\n    const [productName, setProductName] = useState(null);\n  }, \"3jZyYxy8hK4cQZ9ovr/eabizbCE=\"), []), \"3jZyYxy8hK4cQZ9ovr/eabizbCE=\"); // Dependency array ensures effect runs on product ID change\n\n  // Display product info or loading/error message\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: productInfo != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-floating mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        class: \"form-control\",\n        id: \"floatingInput\",\n        value: productName,\n        placeholder: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"floatingInput\",\n        children: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this) : productInfo === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading product info...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Product not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s2(ProductInfo, \"3GlpWhRD/S3rGW76ETaYuPKLWg8=\", false, function () {\n  return [useParams];\n});\n_c = ProductInfo;\nvar _c;\n$RefreshReg$(_c, \"ProductInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDoc","query","collection","where","getDocs","doc","db","Table","Image","Col","label","input","jsxDEV","_jsxDEV","ProductInfo","_s2","_s","$RefreshSig$","data","productId","productInfo","setProductInfo","console","log","getProductInfo","docRef","docSnap","id","setProductName","error","productName","className","children","class","type","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","for","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/my-react-app/src/Screens/productInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDoc , query,collection, where, getDocs ,doc } from 'firebase/firestore'; // Assuming Firebase v9\r\nimport { db } from '../firebase.js';\r\nimport { Table ,Image,Col , label , input} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default  function ProductInfo() {\r\n  const { data: productId } = useParams(); // Extract product ID from route parameter\r\n  const [productInfo, setProductInfo] = useState(null); // State for product data\r\n  console.log(productId)\r\n\r\n\r\n  // Fetch product data from Firebase on component mount and whenever productId changes\r\n  useEffect(() => {\r\n    const getProductInfo = async () => {\r\n      if (!productId) return; // Handle missing product ID gracefully\r\n\r\n      try {\r\n        const docRef = doc(db, \"Products\", productId);\r\n          const docSnap = await getDoc(docRef);\r\n\r\n       if(docSnap!=null){\r\n        setProductInfo({id:docSnap.id , ...docSnap.data()});   \r\n         \r\n        setProductName(productInfo.id) \r\n    \r\n    }\r\n       \r\n        \r\n      \r\n      } catch (error) {\r\n        console.error('Error fetching product info:', error); // Handle errors\r\n      }\r\n    };\r\n\r\n    getProductInfo();\r\n    const [productName , setProductName] =useState(null)\r\n  }, []); // Dependency array ensures effect runs on product ID change\r\n\r\n  // Display product info or loading/error message\r\n  return (\r\n    \r\n    <div className={\"p-4\"}>\r\n      {productInfo!=null ? (\r\n     <div class=\"form-floating mb-3\">\r\n     <input type=\"email\" class=\"form-control\" id=\"floatingInput\" value ={productName} placeholder=\"Product Name\" / >\r\n     <label for=\"floatingInput\">Product Name</label>\r\n   </div>\r\n      ) : (\r\n        productInfo === null ? (\r\n          <p>Loading product info...</p>\r\n        ) : (\r\n          <p>Product not found.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}