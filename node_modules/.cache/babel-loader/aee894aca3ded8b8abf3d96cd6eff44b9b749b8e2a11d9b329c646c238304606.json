{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Import React for component structure\nimport { db } from './firebase.js'; // Import the Firestore instance from firebase.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]); // State to store retrieved products\n\n  // Fetch products from Firestore on component mount\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const productsRef = db.collection('Products'); // Access the 'products' collection\n        const snapshot = await productsRef.get(); // Get a snapshot of all documents\n\n        const retrievedProducts = [];\n        snapshot.forEach(doc => {\n          retrievedProducts.push({\n            id: doc.id,\n            ...doc.data()\n          }); // Add product data with ID\n        });\n        setProducts(retrievedProducts);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    getProducts();\n  }, []); // Empty dependency array ensures fetching only once on mount\n\n  // Display retrieved products (replace with your preferred UI component)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - $\", product.price]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","db","jsxDEV","_jsxDEV","App","_s","products","setProducts","getProducts","productsRef","collection","snapshot","get","retrievedProducts","forEach","doc","push","id","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","product","name","price","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/my-react-app/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'; // Import React for component structure\nimport { db } from './firebase.js'; // Import the Firestore instance from firebase.js\n\nfunction App() {\n  const [products, setProducts] = useState([]); // State to store retrieved products\n\n  // Fetch products from Firestore on component mount\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const productsRef = db.collection('Products'); // Access the 'products' collection\n        const snapshot = await productsRef.get(); // Get a snapshot of all documents\n\n        const retrievedProducts = [];\n        snapshot.forEach((doc) => {\n          retrievedProducts.push({ id: doc.id, ...doc.data() }); // Add product data with ID\n        });\n        setProducts(retrievedProducts);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Empty dependency array ensures fetching only once on mount\n\n  // Display retrieved products (replace with your preferred UI component)\n  return (\n    <div>\n      <h1>Products</h1>\n      {products.length > 0 ? (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>\n              {/* Replace with your product display logic using product.name, price, etc. */}\n              {product.name} - ${product.price}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No products found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,SAASC,EAAE,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,WAAW,GAAGR,EAAE,CAACS,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAC/C,MAAMC,QAAQ,GAAG,MAAMF,WAAW,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC;;QAE1C,MAAMC,iBAAiB,GAAG,EAAE;QAC5BF,QAAQ,CAACG,OAAO,CAAEC,GAAG,IAAK;UACxBF,iBAAiB,CAACG,IAAI,CAAC;YAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;YAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;UAAE,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC;QACFX,WAAW,CAACM,iBAAiB,CAAC;MAChC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDX,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBnB,QAAQ,CAACoB,MAAM,GAAG,CAAC,gBAClBvB,OAAA;MAAAkB,QAAA,EACGf,QAAQ,CAACqB,GAAG,CAAEC,OAAO,iBACpBzB,OAAA;QAAAkB,QAAA,GAEGO,OAAO,CAACC,IAAI,EAAC,MAAI,EAACD,OAAO,CAACE,KAAK;MAAA,GAFzBF,OAAO,CAACX,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELtB,OAAA;MAAAkB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAzCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}